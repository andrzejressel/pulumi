"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2016-2024, Pulumi Corporation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ConfigType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ConfigTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ConfigType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    STRING: _ConfigType.ValueType  # 0
    NUMBER: _ConfigType.ValueType  # 1
    INT: _ConfigType.ValueType  # 2
    BOOL: _ConfigType.ValueType  # 3

class ConfigType(_ConfigType, metaclass=_ConfigTypeEnumTypeWrapper): ...

STRING: ConfigType.ValueType  # 0
NUMBER: ConfigType.ValueType  # 1
INT: ConfigType.ValueType  # 2
BOOL: ConfigType.ValueType  # 3
global___ConfigType = ConfigType

class _Operation:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OperationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Operation.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ADD: _Operation.ValueType  # 0
    DIVIDE: _Operation.ValueType  # 1
    EQUAL: _Operation.ValueType  # 2
    GREATER_THAN: _Operation.ValueType  # 3
    GREATER_THAN_OR_EQUAL: _Operation.ValueType  # 4
    LESS_THAN: _Operation.ValueType  # 5
    LESS_THAN_OR_EQUAL: _Operation.ValueType  # 6
    LOGICAL_AND: _Operation.ValueType  # 7
    LOGICAL_OR: _Operation.ValueType  # 8
    MODULO: _Operation.ValueType  # 9
    MULTIPLY: _Operation.ValueType  # 10
    NOT_EQUAL: _Operation.ValueType  # 11
    SUBTRACT: _Operation.ValueType  # 12

class Operation(_Operation, metaclass=_OperationEnumTypeWrapper): ...

ADD: Operation.ValueType  # 0
DIVIDE: Operation.ValueType  # 1
EQUAL: Operation.ValueType  # 2
GREATER_THAN: Operation.ValueType  # 3
GREATER_THAN_OR_EQUAL: Operation.ValueType  # 4
LESS_THAN: Operation.ValueType  # 5
LESS_THAN_OR_EQUAL: Operation.ValueType  # 6
LOGICAL_AND: Operation.ValueType  # 7
LOGICAL_OR: Operation.ValueType  # 8
MODULO: Operation.ValueType  # 9
MULTIPLY: Operation.ValueType  # 10
NOT_EQUAL: Operation.ValueType  # 11
SUBTRACT: Operation.ValueType  # 12
global___Operation = Operation

@typing_extensions.final
class PclProtobufProgram(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODES_FIELD_NUMBER: builtins.int
    PLUGINS_FIELD_NUMBER: builtins.int
    @property
    def nodes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Node]: ...
    @property
    def plugins(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PluginReference]: ...
    def __init__(
        self,
        *,
        nodes: collections.abc.Iterable[global___Node] | None = ...,
        plugins: collections.abc.Iterable[global___PluginReference] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["nodes", b"nodes", "plugins", b"plugins"]) -> None: ...

global___PclProtobufProgram = PclProtobufProgram

@typing_extensions.final
class PluginReference(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    name: builtins.str
    version: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        version: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "version", b"version"]) -> None: ...

global___PluginReference = PluginReference

@typing_extensions.final
class Node(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_FIELD_NUMBER: builtins.int
    LOCALVARIABLE_FIELD_NUMBER: builtins.int
    CONFIGVARIABLE_FIELD_NUMBER: builtins.int
    OUTPUTVARIABLE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___Resource: ...
    @property
    def localVariable(self) -> global___LocalVariable: ...
    @property
    def configVariable(self) -> global___ConfigVariable: ...
    @property
    def outputVariable(self) -> global___OutputVariable: ...
    def __init__(
        self,
        *,
        resource: global___Resource | None = ...,
        localVariable: global___LocalVariable | None = ...,
        configVariable: global___ConfigVariable | None = ...,
        outputVariable: global___OutputVariable | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["configVariable", b"configVariable", "localVariable", b"localVariable", "outputVariable", b"outputVariable", "resource", b"resource", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["configVariable", b"configVariable", "localVariable", b"localVariable", "outputVariable", b"outputVariable", "resource", b"resource", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value", b"value"]) -> typing_extensions.Literal["resource", "localVariable", "configVariable", "outputVariable"] | None: ...

global___Node = Node

@typing_extensions.final
class Resource(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    LOGICALNAME_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    name: builtins.str
    logicalName: builtins.str
    token: builtins.str
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourceInput]: ...
    @property
    def options(self) -> global___ResourceOptions: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        logicalName: builtins.str = ...,
        token: builtins.str = ...,
        inputs: collections.abc.Iterable[global___ResourceInput] | None = ...,
        options: global___ResourceOptions | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options", b"_options", "options", b"options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options", b"_options", "inputs", b"inputs", "logicalName", b"logicalName", "name", b"name", "options", b"options", "token", b"token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options", b"_options"]) -> typing_extensions.Literal["options"] | None: ...

global___Resource = Resource

@typing_extensions.final
class ResourceInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def value(self) -> global___Expression: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        value: global___Expression | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "value", b"value"]) -> None: ...

global___ResourceInput = ResourceInput

@typing_extensions.final
class ResourceOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DEPENDSON_FIELD_NUMBER: builtins.int
    PROTECT_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    IGNORECHANGES_FIELD_NUMBER: builtins.int
    PROVIDER_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    @property
    def dependsOn(self) -> global___Expression: ...
    @property
    def protect(self) -> global___Expression: ...
    @property
    def parent(self) -> global___Expression: ...
    @property
    def ignoreChanges(self) -> global___Expression: ...
    @property
    def provider(self) -> global___Expression: ...
    @property
    def version(self) -> global___Expression: ...
    def __init__(
        self,
        *,
        dependsOn: global___Expression | None = ...,
        protect: global___Expression | None = ...,
        parent: global___Expression | None = ...,
        ignoreChanges: global___Expression | None = ...,
        provider: global___Expression | None = ...,
        version: global___Expression | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_dependsOn", b"_dependsOn", "_ignoreChanges", b"_ignoreChanges", "_parent", b"_parent", "_protect", b"_protect", "_provider", b"_provider", "_version", b"_version", "dependsOn", b"dependsOn", "ignoreChanges", b"ignoreChanges", "parent", b"parent", "protect", b"protect", "provider", b"provider", "version", b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_dependsOn", b"_dependsOn", "_ignoreChanges", b"_ignoreChanges", "_parent", b"_parent", "_protect", b"_protect", "_provider", b"_provider", "_version", b"_version", "dependsOn", b"dependsOn", "ignoreChanges", b"ignoreChanges", "parent", b"parent", "protect", b"protect", "provider", b"provider", "version", b"version"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_dependsOn", b"_dependsOn"]) -> typing_extensions.Literal["dependsOn"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ignoreChanges", b"_ignoreChanges"]) -> typing_extensions.Literal["ignoreChanges"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_parent", b"_parent"]) -> typing_extensions.Literal["parent"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_protect", b"_protect"]) -> typing_extensions.Literal["protect"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_provider", b"_provider"]) -> typing_extensions.Literal["provider"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_version", b"_version"]) -> typing_extensions.Literal["version"] | None: ...

global___ResourceOptions = ResourceOptions

@typing_extensions.final
class LocalVariable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    LOGICALNAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str
    logicalName: builtins.str
    @property
    def value(self) -> global___Expression: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        logicalName: builtins.str = ...,
        value: global___Expression | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["logicalName", b"logicalName", "name", b"name", "value", b"value"]) -> None: ...

global___LocalVariable = LocalVariable

@typing_extensions.final
class ConfigVariable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    LOGICALNAME_FIELD_NUMBER: builtins.int
    CONFIGTYPE_FIELD_NUMBER: builtins.int
    DEFAULTVALUE_FIELD_NUMBER: builtins.int
    name: builtins.str
    logicalName: builtins.str
    configType: global___ConfigType.ValueType
    @property
    def defaultValue(self) -> global___Expression: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        logicalName: builtins.str = ...,
        configType: global___ConfigType.ValueType = ...,
        defaultValue: global___Expression | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["defaultValue", b"defaultValue"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["configType", b"configType", "defaultValue", b"defaultValue", "logicalName", b"logicalName", "name", b"name"]) -> None: ...

global___ConfigVariable = ConfigVariable

@typing_extensions.final
class OutputVariable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    LOGICALNAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str
    logicalName: builtins.str
    @property
    def value(self) -> global___Expression: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        logicalName: builtins.str = ...,
        value: global___Expression | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["logicalName", b"logicalName", "name", b"name", "value", b"value"]) -> None: ...

global___OutputVariable = OutputVariable

@typing_extensions.final
class Expression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LITERALVALUEEXPRESSION_FIELD_NUMBER: builtins.int
    TEMPLATEEXPRESSION_FIELD_NUMBER: builtins.int
    INDEXEXPRESSION_FIELD_NUMBER: builtins.int
    OBJECTCONSEXPRESSION_FIELD_NUMBER: builtins.int
    TUPLECONSEXPRESSION_FIELD_NUMBER: builtins.int
    FUNCTIONCALLEXPRESSION_FIELD_NUMBER: builtins.int
    RELATIVETRAVERSALEXPRESSION_FIELD_NUMBER: builtins.int
    SCOPETRAVERSALEXPRESSION_FIELD_NUMBER: builtins.int
    ANONYMOUSFUNCTIONEXPRESSION_FIELD_NUMBER: builtins.int
    CONDITIONALEXPRESSION_FIELD_NUMBER: builtins.int
    BINARYOPEXPRESSION_FIELD_NUMBER: builtins.int
    UNARYOPEXPRESSION_FIELD_NUMBER: builtins.int
    @property
    def literalValueExpression(self) -> global___LiteralValueExpression: ...
    @property
    def templateExpression(self) -> global___TemplateExpression: ...
    @property
    def indexExpression(self) -> global___IndexExpression: ...
    @property
    def objectConsExpression(self) -> global___ObjectConsExpression: ...
    @property
    def tupleConsExpression(self) -> global___TupleConsExpression: ...
    @property
    def functionCallExpression(self) -> global___FunctionCallExpression: ...
    @property
    def relativeTraversalExpression(self) -> global___RelativeTraversalExpression: ...
    @property
    def scopeTraversalExpression(self) -> global___ScopeTraversalExpression: ...
    @property
    def anonymousFunctionExpression(self) -> global___AnonymousFunctionExpression: ...
    @property
    def conditionalExpression(self) -> global___ConditionalExpression: ...
    @property
    def binaryOpExpression(self) -> global___BinaryOpExpression: ...
    @property
    def unaryOpExpression(self) -> global___UnaryOpExpression: ...
    def __init__(
        self,
        *,
        literalValueExpression: global___LiteralValueExpression | None = ...,
        templateExpression: global___TemplateExpression | None = ...,
        indexExpression: global___IndexExpression | None = ...,
        objectConsExpression: global___ObjectConsExpression | None = ...,
        tupleConsExpression: global___TupleConsExpression | None = ...,
        functionCallExpression: global___FunctionCallExpression | None = ...,
        relativeTraversalExpression: global___RelativeTraversalExpression | None = ...,
        scopeTraversalExpression: global___ScopeTraversalExpression | None = ...,
        anonymousFunctionExpression: global___AnonymousFunctionExpression | None = ...,
        conditionalExpression: global___ConditionalExpression | None = ...,
        binaryOpExpression: global___BinaryOpExpression | None = ...,
        unaryOpExpression: global___UnaryOpExpression | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["anonymousFunctionExpression", b"anonymousFunctionExpression", "binaryOpExpression", b"binaryOpExpression", "conditionalExpression", b"conditionalExpression", "functionCallExpression", b"functionCallExpression", "indexExpression", b"indexExpression", "literalValueExpression", b"literalValueExpression", "objectConsExpression", b"objectConsExpression", "relativeTraversalExpression", b"relativeTraversalExpression", "scopeTraversalExpression", b"scopeTraversalExpression", "templateExpression", b"templateExpression", "tupleConsExpression", b"tupleConsExpression", "unaryOpExpression", b"unaryOpExpression", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["anonymousFunctionExpression", b"anonymousFunctionExpression", "binaryOpExpression", b"binaryOpExpression", "conditionalExpression", b"conditionalExpression", "functionCallExpression", b"functionCallExpression", "indexExpression", b"indexExpression", "literalValueExpression", b"literalValueExpression", "objectConsExpression", b"objectConsExpression", "relativeTraversalExpression", b"relativeTraversalExpression", "scopeTraversalExpression", b"scopeTraversalExpression", "templateExpression", b"templateExpression", "tupleConsExpression", b"tupleConsExpression", "unaryOpExpression", b"unaryOpExpression", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value", b"value"]) -> typing_extensions.Literal["literalValueExpression", "templateExpression", "indexExpression", "objectConsExpression", "tupleConsExpression", "functionCallExpression", "relativeTraversalExpression", "scopeTraversalExpression", "anonymousFunctionExpression", "conditionalExpression", "binaryOpExpression", "unaryOpExpression"] | None: ...

global___Expression = Expression

@typing_extensions.final
class LiteralValueExpression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UNKNOWNVALUE_FIELD_NUMBER: builtins.int
    STRINGVALUE_FIELD_NUMBER: builtins.int
    NUMBERVALUE_FIELD_NUMBER: builtins.int
    BOOLVALUE_FIELD_NUMBER: builtins.int
    unknownValue: builtins.bool
    stringValue: builtins.str
    numberValue: builtins.float
    boolValue: builtins.bool
    def __init__(
        self,
        *,
        unknownValue: builtins.bool = ...,
        stringValue: builtins.str = ...,
        numberValue: builtins.float = ...,
        boolValue: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["boolValue", b"boolValue", "numberValue", b"numberValue", "stringValue", b"stringValue", "unknownValue", b"unknownValue", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["boolValue", b"boolValue", "numberValue", b"numberValue", "stringValue", b"stringValue", "unknownValue", b"unknownValue", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value", b"value"]) -> typing_extensions.Literal["unknownValue", "stringValue", "numberValue", "boolValue"] | None: ...

global___LiteralValueExpression = LiteralValueExpression

@typing_extensions.final
class TemplateExpression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARTS_FIELD_NUMBER: builtins.int
    @property
    def parts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Expression]: ...
    def __init__(
        self,
        *,
        parts: collections.abc.Iterable[global___Expression] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parts", b"parts"]) -> None: ...

global___TemplateExpression = TemplateExpression

@typing_extensions.final
class IndexExpression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COLLECTION_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    @property
    def collection(self) -> global___Expression: ...
    @property
    def key(self) -> global___Expression: ...
    def __init__(
        self,
        *,
        collection: global___Expression | None = ...,
        key: global___Expression | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["collection", b"collection", "key", b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collection", b"collection", "key", b"key"]) -> None: ...

global___IndexExpression = IndexExpression

@typing_extensions.final
class ObjectConsExpression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class PropertiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Expression: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Expression | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def properties(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Expression]: ...
    def __init__(
        self,
        *,
        properties: collections.abc.Mapping[builtins.str, global___Expression] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["properties", b"properties"]) -> None: ...

global___ObjectConsExpression = ObjectConsExpression

@typing_extensions.final
class TupleConsExpression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ITEMS_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Expression]: ...
    def __init__(
        self,
        *,
        items: collections.abc.Iterable[global___Expression] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items", b"items"]) -> None: ...

global___TupleConsExpression = TupleConsExpression

@typing_extensions.final
class FunctionCallExpression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def args(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Expression]: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        args: collections.abc.Iterable[global___Expression] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["args", b"args", "name", b"name"]) -> None: ...

global___FunctionCallExpression = FunctionCallExpression

@typing_extensions.final
class RelativeTraversalExpression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOURCE_FIELD_NUMBER: builtins.int
    TRAVERSAL_FIELD_NUMBER: builtins.int
    @property
    def source(self) -> global___Expression: ...
    @property
    def traversal(self) -> global___Traversal: ...
    def __init__(
        self,
        *,
        source: global___Expression | None = ...,
        traversal: global___Traversal | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["source", b"source", "traversal", b"traversal"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["source", b"source", "traversal", b"traversal"]) -> None: ...

global___RelativeTraversalExpression = RelativeTraversalExpression

@typing_extensions.final
class ScopeTraversalExpression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOTNAME_FIELD_NUMBER: builtins.int
    TRAVERSAL_FIELD_NUMBER: builtins.int
    rootName: builtins.str
    @property
    def traversal(self) -> global___Traversal: ...
    def __init__(
        self,
        *,
        rootName: builtins.str = ...,
        traversal: global___Traversal | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["traversal", b"traversal"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["rootName", b"rootName", "traversal", b"traversal"]) -> None: ...

global___ScopeTraversalExpression = ScopeTraversalExpression

@typing_extensions.final
class AnonymousFunctionExpression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BODY_FIELD_NUMBER: builtins.int
    PARAMETERS_FIELD_NUMBER: builtins.int
    @property
    def body(self) -> global___Expression: ...
    @property
    def parameters(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        body: global___Expression | None = ...,
        parameters: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["body", b"body"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["body", b"body", "parameters", b"parameters"]) -> None: ...

global___AnonymousFunctionExpression = AnonymousFunctionExpression

@typing_extensions.final
class ConditionalExpression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONDITION_FIELD_NUMBER: builtins.int
    TRUEEXPR_FIELD_NUMBER: builtins.int
    FALSEEXPR_FIELD_NUMBER: builtins.int
    @property
    def condition(self) -> global___Expression: ...
    @property
    def trueExpr(self) -> global___Expression: ...
    @property
    def falseExpr(self) -> global___Expression: ...
    def __init__(
        self,
        *,
        condition: global___Expression | None = ...,
        trueExpr: global___Expression | None = ...,
        falseExpr: global___Expression | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["condition", b"condition", "falseExpr", b"falseExpr", "trueExpr", b"trueExpr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["condition", b"condition", "falseExpr", b"falseExpr", "trueExpr", b"trueExpr"]) -> None: ...

global___ConditionalExpression = ConditionalExpression

@typing_extensions.final
class BinaryOpExpression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATION_FIELD_NUMBER: builtins.int
    LEFT_FIELD_NUMBER: builtins.int
    RIGHT_FIELD_NUMBER: builtins.int
    operation: global___Operation.ValueType
    @property
    def left(self) -> global___Expression: ...
    @property
    def right(self) -> global___Expression: ...
    def __init__(
        self,
        *,
        operation: global___Operation.ValueType = ...,
        left: global___Expression | None = ...,
        right: global___Expression | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["left", b"left", "right", b"right"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["left", b"left", "operation", b"operation", "right", b"right"]) -> None: ...

global___BinaryOpExpression = BinaryOpExpression

@typing_extensions.final
class UnaryOpExpression(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATION_FIELD_NUMBER: builtins.int
    OPERAND_FIELD_NUMBER: builtins.int
    operation: global___Operation.ValueType
    @property
    def operand(self) -> global___Expression: ...
    def __init__(
        self,
        *,
        operation: global___Operation.ValueType = ...,
        operand: global___Expression | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["operand", b"operand"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["operand", b"operand", "operation", b"operation"]) -> None: ...

global___UnaryOpExpression = UnaryOpExpression

@typing_extensions.final
class Traversal(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EACH_FIELD_NUMBER: builtins.int
    @property
    def each(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Traverser]: ...
    def __init__(
        self,
        *,
        each: collections.abc.Iterable[global___Traverser] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["each", b"each"]) -> None: ...

global___Traversal = Traversal

@typing_extensions.final
class Traverser(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRAVERSEATTR_FIELD_NUMBER: builtins.int
    TRAVERSEINDEX_FIELD_NUMBER: builtins.int
    TRAVERSEROOT_FIELD_NUMBER: builtins.int
    TRAVERSESPLAT_FIELD_NUMBER: builtins.int
    @property
    def traverseAttr(self) -> global___TraverseAttr: ...
    @property
    def traverseIndex(self) -> global___TraverseIndex: ...
    @property
    def traverseRoot(self) -> global___TraverseRoot: ...
    @property
    def traverseSplat(self) -> global___TraverseSplat: ...
    def __init__(
        self,
        *,
        traverseAttr: global___TraverseAttr | None = ...,
        traverseIndex: global___TraverseIndex | None = ...,
        traverseRoot: global___TraverseRoot | None = ...,
        traverseSplat: global___TraverseSplat | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["traverseAttr", b"traverseAttr", "traverseIndex", b"traverseIndex", "traverseRoot", b"traverseRoot", "traverseSplat", b"traverseSplat", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["traverseAttr", b"traverseAttr", "traverseIndex", b"traverseIndex", "traverseRoot", b"traverseRoot", "traverseSplat", b"traverseSplat", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value", b"value"]) -> typing_extensions.Literal["traverseAttr", "traverseIndex", "traverseRoot", "traverseSplat"] | None: ...

global___Traverser = Traverser

@typing_extensions.final
class TraverseAttr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name"]) -> None: ...

global___TraverseAttr = TraverseAttr

@typing_extensions.final
class TraverseIndex(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INDEX_FIELD_NUMBER: builtins.int
    index: builtins.int
    def __init__(
        self,
        *,
        index: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["index", b"index"]) -> None: ...

global___TraverseIndex = TraverseIndex

@typing_extensions.final
class TraverseRoot(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name"]) -> None: ...

global___TraverseRoot = TraverseRoot

@typing_extensions.final
class TraverseSplat(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EACH_FIELD_NUMBER: builtins.int
    @property
    def each(self) -> global___Traversal: ...
    def __init__(
        self,
        *,
        each: global___Traversal | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["each", b"each"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["each", b"each"]) -> None: ...

global___TraverseSplat = TraverseSplat
